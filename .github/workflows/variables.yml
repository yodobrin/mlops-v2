name: set-variables
  #      # Global
  # ap_vm_image: ubuntu-20.04

  # namespace: spmlopsv2 #Note: A namespace with many characters will cause storage account creation to fail due to storage account names having a limit of 24 characters.
  # postfix: 4200
  # location: northeurope
  # environment: dev
  # enable_aml_computecluster: true
  # enable_monitoring: false

  # # DO NOT TOUCH

  # # For pipeline reference
  # resource_group: rg-$(namespace)-$(postfix)$(environment)
  # aml_workspace: mlw-$(namespace)-$(postfix)$(environment)
  # application_insights: mlw-$(namespace)-$(postfix)$(environment)
  # key_vault: kv-$(namespace)-$(postfix)$(environment)
  # container_registry: cr$(namespace)$(postfix)$(environment)
  # storage_account: st$(namespace)$(postfix)$(environment)

on:
  workflow_call: 
    inputs:
      location:
        description: "The resource group to use"
        default: 'northeurope'
        type: string
      namespace:
        description: "Namespace of the resources"
        default: "ydamlv12"
        type: string
      postfix:
        description: "Postfix for the resource names"
        default: 'yd202304'
        type: string
      environment:
        description: "Environment"
        default: "dev"
        type: string
      enable_aml_computecluster:
        description: "Boolean to decide whether to deploy an AML compute cluster or not"
        default: true
        type: boolean
      enable_monitoring:
        description: "Boolean to decide whether to enable monitoring"
        default: false
        type: boolean
      aml_workspace:
        description: "The aml_workspace to use"
        default: mlw-$(namespace)-$(postfix)$(environment)
        type: string
      bep:
        description: "The batch endpoint"
        default: bep-$(namespace)-$(postfix)$(environment)
        type: string
      oep:
        description: "The online endpoint"
        default: oep-$(namespace)-$(postfix)$(environment)
        type: string
    outputs:
      location:
        description: "The resource group to use"
        value: ${{ jobs.read-yaml.outputs.location }}
      namespace:
        description: "Namespace of the resources"
        value: ${{ jobs.read-yaml.outputs.namespace }}
      postfix:
        description: "Postfix for the resource names"
        value: ${{ jobs.read-yaml.outputs.postfix }}
      environment:
        description: "Environment"
        value: ${{ jobs.read-yaml.outputs.environment }}
      enable_aml_computecluster:
        description: "Boolean to decide whether to deploy an AML compute cluster or not"
        value: ${{ jobs.read-yaml.outputs.enable_aml_computecluster }}
      enable_monitoring:
        description: "Boolean to decide whether to enable monitoring"
        value: ${{ jobs.read-yaml.outputs.enable_monitoring }}
      resource_group:
        description: "The resource group to use"
        value: ${{ jobs.read-yaml.outputs.resource_group }}
      aml_workspace:
        description: "The aml_workspace to use"
        value: ${{ jobs.read-yaml.outputs.aml_workspace }}
      bep:
        description: "The batch endpoint"
        value: ${{ jobs.read-yaml.outputs.bep }}
      oep:
        description: "The online endpoint"
        value: ${{ jobs.read-yaml.outputs.oep }}

jobs:
  read-yaml:
    runs-on: ubuntu-latest
    outputs:
      location: ${{ steps.variables.outputs.location }}
      namespace: ${{  steps.variables.outputs.namespace }}
      postfix: ${{  steps.variables.outputs.postfix }}
      environment: ${{  steps.variables.outputs.environment }}
      enable_aml_computecluster: ${{  steps.variables.outputs.enable_aml_computecluster }}
      enable_monitoring: ${{  steps.variables.outputs.enable_monitoring }}
      resource_group: rg-${{ steps.variables.outputs.namespace }}-${{ steps.variables.outputs.postfix }} ${{ steps.variables.outputs.environment }}
      aml_workspace: ${{  steps.variables.outputs.aml_workspace }}
      # bep: ${{  steps.variables.outputs.bep }}
      # oep: ${{  steps.variables.outputs.oep }}
    steps:
        - id: variables
          run: echo The location is ${{ inputs.location }}
